<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://www.collibra.com/apiv2">
  <collaboration id="Collaboration">
    <participant id="check_data_extension_workflow" name="Check Data Extensions Workflow" processRef="check_data_extensions"></participant>
  </collaboration>
  <process id="check_data_extensions" name="Check Data Extensions" isExecutable="true">
    <laneSet id="laneSet_check_data_extensions">
      <lane id="lane1">
        <flowNodeRef>endevent1</flowNodeRef>
        <flowNodeRef>data_extensions_needed</flowNodeRef>
        <flowNodeRef>timerstartevent1</flowNodeRef>
      </lane>
    </laneSet>
    <scriptTask id="data_extensions_needed" name="Data Extensions Needed" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import com.collibra.dgc.core.api.dto.instance.asset.FindAssetsRequest
import com.collibra.dgc.core.api.dto.instance.attribute.FindAttributesRequest
import com.collibra.dgc.core.api.model.workflow.WorkflowBusinessItemType
import java.text.SimpleDateFormat
import java.time.LocalDate
import java.time.ZoneId
import com.collibra.dgc.core.api.dto.workflow.StartWorkflowInstancesRequest


loggerApi.info("&lt;&lt;Check data extensions: start")


def zoneId = ZoneId.of("UTC")
def currentDate = LocalDate.now()
def current_date = currentDate.atStartOfDay(zoneId).toEpochSecond() * 1000


/*
Which tickets has a start_effective_date  76 days ago, with the status 'access granted' AND no edit or reprovisioning workflow is running yet
1. make a list of tickets access granted tickets
2. check the effective start date == 76 days ago
3. check if no workflows are running yet (edit / reprovisioning workflow)
*/


//1 - list of tickets with a status: access granted
def list_of_tickets = assetApi.findAssets(FindAssetsRequest.builder()
									.typeIds([string2Uuid(uuid_ticket_asset_type)]) //ticket_id
									.statusIds([string2Uuid("00000000-0000-0000-0000-000000005024")])  //access_granted
									.excludeMeta(false)
									.build()).getResults()
					
loggerApi.info("--list_of_tickets:" + list_of_tickets)

list_of_tickets.each{
	ticket -&gt;
	loggerApi.info("ticket:" + ticket)
	
	if (attributeApi.findAttributes(FindAttributesRequest.builder()
									.assetId(ticket.getId())
									.typeIds([string2Uuid("00000000-0000-0000-0000-000000000254")]) //effective end date
									.build()
									).getResults())
	{
		long effective_end_date = 	attributeApi.findAttributes(FindAttributesRequest.builder()
									.assetId(ticket.getId())
									.typeIds([string2Uuid("00000000-0000-0000-0000-000000000254")]) //effective end date
									.build()
									).getResults().get(0).getValue() - 1209600000 //14 days
									
		loggerApi.info("--effective_end_date:" + effective_end_date)
		loggerApi.info("--current_date:" + current_date)
									
		
		//2. check the effective start date == 76 days ago
		if (current_date.toString() == effective_end_date.toString())
			{
				
				
					workflowInstanceApi.startWorkflowInstances(StartWorkflowInstancesRequest.builder()
													.addBusinessItemId(ticket.getId())
													.businessItemType(WorkflowBusinessItemType.valueOf("ASSET"))
													.workflowDefinitionId(workflowDefinitionApi.getWorkflowDefinitionByProcessId("data_reprovisioning_automatic").getId())
													.build())
					
					loggerApi.info("--workflow created")
				
				/*
				loggerApi.info("--in if")
				//Check if a workflow is already running for this ticket, if not - we will kick it off
				if (! workflowInstanceApi.findFlatWorkflowInstances(FindWorkflowInstancesRequest.builder()
					//.workflowDefinitionId()
					.businessItemId(ticket.getId())
					.build()).getResults())
					{
						workflowInstanceApi.startWorkflowInstances(StartWorkflowInstancesRequest.builder()
														.addBusinessItemId(ticket.getId())
														.businessItemType(WorkflowBusinessItemType.valueOf("ASSET"))
														.workflowDefinitionId("data_reprovisioning_automatic")
														.build())
						
						loggerApi.info("--workflow created")
					}
				  */
								
			}

	}
	
	
}

loggerApi.info("&lt;&lt;check data extensions: end")</script>
    </scriptTask>
    <endEvent id="endevent1" name="End"></endEvent>
    <sequenceFlow id="flow2" sourceRef="data_extensions_needed" targetRef="endevent1"></sequenceFlow>
    <startEvent id="timerstartevent1" name="Timer start">
      <extensionElements>
        <activiti:formProperty id="uuid_ticket_asset_type" name="Please fill in the UUID of the asset type data request ticket" type="string" default="6386dce2-b559-49d4-b4e7-cd9f3f9b561d" readable="false" required="true"></activiti:formProperty>
      </extensionElements>
      <timerEventDefinition>
        <timeCycle>0 0 * ? * *</timeCycle>
      </timerEventDefinition>
    </startEvent>
    <sequenceFlow id="flow3" sourceRef="timerstartevent1" targetRef="data_extensions_needed"></sequenceFlow>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_Collaboration">
    <bpmndi:BPMNPlane bpmnElement="Collaboration" id="BPMNPlane_Collaboration">
      <bpmndi:BPMNShape bpmnElement="check_data_extension_workflow" id="BPMNShape_check_data_extension_workflow">
        <omgdc:Bounds height="221.0" width="401.0" x="500.0" y="280.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="lane1" id="BPMNShape_lane1">
        <omgdc:Bounds height="221.0" width="381.0" x="520.0" y="280.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="data_extensions_needed" id="BPMNShape_data_extensions_needed">
        <omgdc:Bounds height="71.0" width="105.0" x="660.0" y="354.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent1" id="BPMNShape_endevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="830.0" y="372.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="timerstartevent1" id="BPMNShape_timerstartevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="580.0" y="372.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="flow2" id="BPMNEdge_flow2">
        <omgdi:waypoint x="765.0" y="389.0"></omgdi:waypoint>
        <omgdi:waypoint x="830.0" y="389.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow3" id="BPMNEdge_flow3">
        <omgdi:waypoint x="615.0" y="389.0"></omgdi:waypoint>
        <omgdi:waypoint x="660.0" y="389.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>